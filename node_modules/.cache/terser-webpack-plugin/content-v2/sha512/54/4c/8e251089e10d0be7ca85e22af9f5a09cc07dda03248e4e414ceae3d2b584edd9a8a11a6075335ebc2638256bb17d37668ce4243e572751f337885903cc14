{"code":"!function(t){var e={};function s(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var a in t)s.d(r,a,function(e){return t[e]}.bind(null,a));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,\"a\",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p=\"/\",s(s.s=0)}([function(t,e,s){t.exports=s(1)},function(t,e,s){(function(t){let e=s(3)({logger:!0});e.register(s(4),{connectionString:\"postgres://postgres:postgres@localhost:5431/sql\"}),e.addContentTypeParser(\"application/json\",{parseAs:\"string\"},(function(t,e,s){try{let t={};e&&(t=JSON.parse(e)),s(null,t)}catch(t){t.statusCode=400,s(t,void 0)}})),e.post(\"/api/forum/create\",(async function(t,e){let s=new n(t.body);const a=await o.getUsersByNickname({nickname:s.user});if(!a.length)return r(e,404,{message:\"user not found\"});const i=await u.getForumBySlug(s);if(i.length)return r(e,409,new n(i[0]).get());return s.user=a[0].nickname,await u.createNewForum(s),r(e,201,s.get())})),e.post(\"/api/forum/:slug/create\",(async function(t,e){let s=new i(t.body);if(!(await o.getUsersByNickname({nickname:s.author})).length)return r(e,404,{message:\"user not found\"});const a=await u.getForumBySlug({slug:t.params.slug});if(!a.length)return r(e,404,{message:\"forum not found\"});const n=await c.getThreadBySlugOrTitle(s);if(n.length)return r(e,409,n[0]);s.forum=a[0].slug,await c.createThread(s);const d=await c.getThreadBySlugOrTitle(s);a[0].threads+=1,await u.modifyForum(a[0]);const l=await p.getMatchFromUsersForum({nickname:s.author,forum:t.params.slug});console.log(\"MATCH\",l),l.length||await p.addUserToUsersForum({nickname:s.author,forum:t.params.slug});return r(e,201,d[0])})),e.get(\"/api/forum/:slug/details\",(async function(t,e){let s=new n;s.slug=t.params.slug;const a=await u.getForumBySlug(s);if(a.length)return r(e,200,new n(a[0]).get());return r(e,404,{message:\"forum not found\"})})),e.get(\"/api/forum/:slug/threads\",(async function(t,e){let s=new n;if(s.slug=t.params.slug,s.desc=\"true\"===t.query.desc,s.limit=t.query.limit?t.query.limit:100,s.since=t.query.since,!(await u.getForumBySlug(s)).length)return r(e,404,{message:\"thread not found\"});const a=await u.getThreadsFromForum(s);return r(e,200,a)})),e.get(\"/api/forum/:slug/users\",(async function(t,e){let s={};if(s.forum=t.params.slug,s.limit=t.query.limit?t.query.limit:100,s.since=t.query.since,s.desc=\"true\"===t.query.desc,!(await u.getForumBySlug({slug:s.forum})).length)return r(e,404,{message:\"forum not found\"});const a=await p.getUsersFromForum(s);return r(e,200,a)})),e.post(\"/api/post/:id/details\",(async function(t,e){let s={};s.message=t.body.message,s.id=t.params.id;let a=await d.getPostById(s.id);if(!a.length)return r(e,404,{message:\"post not found\"});s.message&&s.message!==a[0].message&&(await d.modifyPost(s),a[0].isEdited=!0,a[0].message=s.message);return delete a[0].level,r(e,200,a[0])})),e.get(\"/api/post/:id/details\",(async function(t,e){const s=t.params.id,a=t.query&&t.query.related?t.query.related.split(\",\"):[];let n={};const i=await d.getPostById(s);if(!i.length)return r(e,404,{message:\"post not found\"});if(delete i[0].level,n.post=i[0],a.includes(\"thread\")){const t=await c.getThreadBySlugOrId(n.post.thread);n.thread=t[0]}if(a.includes(\"forum\")){const t=await u.getForumBySlug({slug:n.post.forum});n.forum=t[0],n.forum.user=n.forum.username,delete n.forum.username}if(a.includes(\"user\")){const t=await o.getUsersByNickname({nickname:n.post.author});n.author=t[0]}return n.post.isEdited=n.post.isedited,delete n.post.isedited,r(e,200,n)})),e.post(\"/api/service/clear\",(async function(t,s){const a=await e.pg.connect();return await a.query(\"TRUNCATE users, forums, threads, posts, votes\"),a.release(),r(s,200,null)})),e.get(\"/api/service/status\",(async function(t,e){const s=await m.getUserStatus(),a=await m.getForumStatus(),n=await m.getThreadStatus(),i=await m.getPostStatus();return r(e,200,Object.assign({},a,i,n,s))})),e.post(\"/api/thread/:slug_or_id/create\",(async function(t,e){let s=t.body;const a=t.params.slug_or_id,n=new Date,i=await c.getThreadBySlugOrId(a);if(!i.length)return r(e,404,{message:\"thread not found\"});for(let t of s){const s=await o.getUsersByNickname({nickname:t.author});if(!s.length)return console.log(\"NOT FOUND\",s),r(e,404,{message:\"user not found\"});if(t.parent){const s=await d.getPostById(t.parent);if(!s.length)return r(e,409,{message:\"post parent not found\"});if(i[0].id!==s[0].thread)return r(e,409,{message:\"another thread\"});t.level=s[0].level+1,t.tree=s[0].tree,t.path=s[0].path+Date.now().toString(36)}else t.tree=Date.now(),t.level=0,t.path=Date.now().toString(36);t.thread=i[0].id,t.forum=i[0].forum,t.created=n.toISOString(),t.id=await d.createPosts(t),(await p.getMatchFromUsersForum({nickname:t.author,forum:t.forum})).length||await p.addUserToUsersForum({nickname:t.author,forum:t.forum})}const l=await u.getForumBySlug({slug:i[0].forum});return l[0].posts+=s.length,await u.modifyForum(l[0]),r(e,201,s)})),e.get(\"/api/thread/:slug_or_id/details\",(async function(t,e){const s=t.params.slug_or_id,a=await c.getThreadBySlugOrId(s);if(!a.length)return r(e,404,{message:\"thread not found\"});return r(e,200,a[0])})),e.post(\"/api/thread/:slug_or_id/details\",(async function(t,e){const s=t.body,a=t.params.slug_or_id;let n=await c.getThreadBySlugOrId(a);if(!n.length)return r(e,404,{message:\"thread not found\"});return n[0].message=s.message?s.message:n[0].message,n[0].title=s.title?s.title:n[0].title,await c.modifyThread(n[0]),r(e,200,n[0])})),e.get(\"/api/thread/:slug_or_id/posts\",(async function(t,e){let s={};s.slug_or_id=t.params.slug_or_id,s.sort=t.query&&t.query.sort?t.query.sort.split(\",\"):[],s.limit=t.query.limit?t.query.limit:100,s.since=t.query.since,s.desc=\"true\"===t.query.desc;const a=await c.getThreadBySlugOrId(s.slug_or_id);if(!a.length)return r(e,404,{message:\"thread not found\"});if(s.id=a[0].id,s.sort.includes(\"parent_tree\")){const t=await c.getPostsParentTree(s);return r(e,200,t)}if(s.sort.includes(\"tree\")){const t=await c.getPostsTree(s);return r(e,200,t)}const n=await c.getPostsFromThread(s);return r(e,200,n)})),e.post(\"/api/thread/:slug_or_id/vote\",(async function(t,e){let s=t.body;s.thread=t.params.slug_or_id;let a=await c.getThreadBySlugOrId(s.thread);if(!a.length)return r(e,404,{message:\"thread not found\"});if(!(await o.getUsersByNickname({nickname:s.nickname})).length)return r(e,404,{message:\"user not found\"});s.thread=a[0].id;const n=await l.getVoteBySlugOrIdAndNickname(s);n.length?(a[0].votes=a[0].votes-n[0].voice+s.voice,await l.modifyVote(s)):(a[0].votes+=s.voice,await l.createVote(s));return await c.modifyThread(a[0]),r(e,200,a[0])})),e.post(\"/api/user/:nickname/create\",(async function(t,e){let s=new a(t.body);s.nickname=t.params.nickname;const n=await o.getUsersByNicknameOrEmail(s);if(n.length>0)return r(e,409,n);return await o.createUser(s),r(e,201,s.get())})),e.get(\"/api/user/:nickname/profile\",(async function(t,e){let s=new a(t.body);s.nickname=t.params.nickname;const n=await o.getUsersByNickname(s);if(n.length)return r(e,200,n[0]);return r(e,404,{message:\"user not found\"})})),e.post(\"/api/user/:nickname/profile\",(async function(t,e){let s=new a(t.body);s.nickname=t.params.nickname;const n=await o.getUsersByNicknameOrEmail(s);if(n.length>1)return r(e,409,{message:\"conflict update user\"});if(n.length<1)return r(e,404,{message:\"user not found\"});return s.updateInstance(n[0]),await o.modifyUser(s),r(e,200,s.get())}));function r(t,e,s){return t.code(e),s}class a{constructor(t){this._instance=t||{}}updateInstance(t){for(let e in t)this[e]||(this[e]=t[e])}set about(t){this._instance.about=t}set email(t){this._instance.email=t}set fullname(t){this._instance.fullname=t}set nickname(t){this._instance.nickname=t}get about(){return this._instance.about}get email(){return this._instance.email}get fullname(){return this._instance.fullname}get nickname(){return this._instance.nickname}get(){return this._instance}}class n{constructor(t){this._instance=t||{},this._clearInstance()}_clearInstance(){\"username\"in this._instance&&(this.user=this._instance.username,delete this._instance.username)}set posts(t){this._instance.posts=t}set slug(t){this._instance.slug=t}set threads(t){this._instance.threads=t}set title(t){this._instance.title=t}set user(t){this._instance.user=t}set limit(t){this._limit=t}set since(t){this._since=t}set desc(t){this._desc=t}get posts(){return this._instance.posts}get slug(){return this._instance.slug}get threads(){return this._instance.threads}get title(){return this._instance.title}get user(){return this._instance.user}get limit(){return this._limit}get since(){return this._since}get desc(){return this._desc}get(){return this._instance}}class i{constructor(t){this._instance=t||{}}set author(t){this._instance.author=t}set created(t){this._instance.created=t}set forum(t){this._instance.forum=t}set id(t){this._instance.id=t}set message(t){this._instance.message=t}set slug(t){this._instance.slug=t}set title(t){this._instance.title=t}set votes(t){this._instance.votes=t}get author(){return this._instance.author}get created(){return this._instance.created}get forum(){return this._instance.forum}get id(){return this._instance.id}get message(){return this._instance.message}get slug(){return this._instance.slug}get title(){return this._instance.title}get votes(){return this._instance.votes}get(){return this._instance}}class o{static async getUsersByNicknameOrEmail(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT about, email, fullname, nickname FROM users WHERE LOWER(email)=LOWER($1) OR LOWER(nickname)=LOWER($2)\",[t.email,t.nickname]);return s.release(),r}static async getUsersByNickname(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT about, email, fullname, nickname FROM users WHERE LOWER(nickname)=LOWER($1)\",[t.nickname]);return s.release(),r}static async getUsersByEmail(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT about, email, fullname, nickname FROM users WHERE LOWER(email)=LOWER($1)\",[t.email]);return s.release(),r}static async createUser(t){const s=await e.pg.connect();await s.query(\"INSERT INTO users(about, email, fullname, nickname) VALUES($1,$2,$3,$4)\",[t.about,t.email,t.fullname,t.nickname]),s.release()}static async modifyUser(t){const s=await e.pg.connect();await s.query(\"UPDATE users SET about=$1, email=$2, fullname=$3 WHERE LOWER(nickname) = LOWER($4)\",[t.about,t.email,t.fullname,t.nickname]),s.release()}}class u{static async getForumBySlug(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT posts, slug, threads, title, username FROM forums WHERE LOWER(forums.slug) = LOWER($1)\",[t.slug]);return s.release(),r}static async getThreadsFromForum(t){const s=await e.pg.connect();if(t.desc&&t.since){const{rows:e}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(forum) = LOWER($3) AND threads.created <= $1 ORDER BY threads.created DESC LIMIT $2 \",[t.since,t.limit,t.slug]);return s.release(),e}if(!t.desc&&t.since){const{rows:e}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(forum) = LOWER($3) AND threads.created >= $1 ORDER BY threads.created LIMIT $2 \",[t.since,t.limit,t.slug]);return s.release(),e}if(t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(forum) = LOWER($2) ORDER BY threads.created DESC LIMIT $1 \",[t.limit,t.slug]);return s.release(),e}const{rows:r}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(forum) = LOWER($2) ORDER BY threads.created LIMIT $1 \",[t.limit,t.slug]);return s.release(),r}static async createNewForum(t){const s=await e.pg.connect();await s.query(\"INSERT INTO forums(posts, slug, threads, title, username) VALUES($1,$2,$3,$4,$5)\",[t.posts,t.slug,t.threads,t.title,t.user]),s.release()}static async modifyForum(t){const s=await e.pg.connect();await s.query(\"UPDATE forums SET posts=$1, slug=$2, threads=$3, title=$4, username=$5 WHERE LOWER(slug) = LOWER($2)\",[t.posts,t.slug,t.threads,t.title,t.username]),s.release()}}class c{static async createThread(t){const s=await e.pg.connect();await s.query(\"INSERT INTO threads(author, created, forum, message, slug, title, votes) VALUES($1,$2,$3,$4,$5,$6,$7)\",[t.author,t.created,t.forum,t.message,t.slug,t.title,t.votes]),s.release()}static async getThreadBySlugOrTitle(t){const s=await e.pg.connect();if(t.slug){const{rows:e}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(threads.slug) = LOWER($1)\",[t.slug]);return s.release(),e}const{rows:r}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(threads.title) = LOWER($1)\",[t.title]);return s.release(),r}static async getThreadBySlugOrId(t){const s=await e.pg.connect();if(isNaN(t)){const{rows:e}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE LOWER(threads.slug) = LOWER($1)\",[t]);return s.release(),e}const{rows:r}=await s.query(\"SELECT author, created, forum, id, message, slug, title, votes FROM threads WHERE threads.id = $1\",[t]);return s.release(),r}static async modifyThread(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"UPDATE threads SET author=$1, created=$2, forum=$3, message=$4, slug=$5, title=$6, votes=$7 WHERE threads.id = $8 \",[t.author,t.created,t.forum,t.message,t.slug,t.title,t.votes,t.id]);return s.release(),r}static async getFlatPostsFromThread(t){const s=await e.pg.connect();if(t.desc&&t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.id > $3 ORDER BY posts.created, posts.id DESC LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),e}if(!t.desc&&t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.id > $3 ORDER BY posts.created, posts.id ASC LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),e}if(t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.created, posts.id DESC LIMIT $1 \",[t.limit,t.id]);return s.release(),e}const{rows:r}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.created, posts.id ASC LIMIT $1 \",[t.limit,t.id]);return s.release(),r}static async getPostsFromThread(t){const s=await e.pg.connect();if(t.desc&&t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.id > $3 ORDER BY posts.id DESC LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),e}if(!t.desc&&t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.id > $3 ORDER BY posts.id ASC LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),e}if(t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.id DESC LIMIT $1 \",[t.limit,t.id]);return s.release(),e}const{rows:r}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.id ASC LIMIT $1 \",[t.limit,t.id]);return s.release(),r}static async getPostsTree(t){const s=await e.pg.connect();if(!t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.path LIMIT $1 \",[t.limit,t.id]);return s.release(),e}if(t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.tree DESC, posts.path DESC LIMIT $1 \",[t.limit,t.id]);return s.release(),e}if(t.desc&&t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.path > (SELECT posts.path FROM posts WHERE posts.id = $3) ORDER BY posts.tree DESC, posts.path DESC LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),e}const{rows:r}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.path > (SELECT posts.path FROM posts WHERE posts.id = $3) ORDER BY posts.path LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),r}static async getPostsParentTree(t){const s=await e.pg.connect();if(!t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads WHERE posts.thread=$2 AND posts.path && (SELECT ARRAY (select posts.path from posts WHERE posts.thread = $2 AND posts.parent = 0 ORDER BY posts.path LIMIT $1))\",[t.limit,t.id]);return s.release(),e}if(t.desc&&!t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 ORDER BY posts.tree DESC, posts.path DESC LIMIT $1 \",[t.limit,t.id]);return s.release(),e}if(t.desc&&t.since){const{rows:e}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.path > (SELECT posts.path FROM posts WHERE posts.id = $3) ORDER BY posts.tree DESC, posts.path DESC LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),e}const{rows:r}=await s.query(\"SELECT posts.author, posts.created, posts.forum, posts.id, posts.isEdited, posts.message, posts.parent, posts.thread FROM threads JOIN posts ON threads.id=posts.thread WHERE threads.id=$2 AND posts.path > (SELECT posts.path FROM posts WHERE posts.id = $3) ORDER BY posts.path LIMIT $1 \",[t.limit,t.id,t.since]);return s.release(),r}}class d{static async createPosts(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"INSERT INTO posts(author, created, forum, isEdited, message, parent, thread, level, tree, path) VALUES($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING posts.id\",[t.author,t.created,t.forum,t.isEdited,t.message,t.parent,t.thread,t.level,t.tree,t.path]);return s.release(),r[0].id}static async getPostById(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT * FROM posts WHERE posts.id = $1\",[t]);return s.release(),r}static async modifyPost(t){const s=await e.pg.connect();await s.query(\"UPDATE posts SET message=$1, isEdited=$2WHERE posts.id = $3\",[t.message,!0,t.id])}}class l{static async getVoteBySlugOrIdAndNickname(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT nickname, voice, thread FROM votes WHERE LOWER(votes.thread) = LOWER($1) AND LOWER(votes.nickname) = LOWER($2)\",[t.thread,t.nickname]);return s.release(),r}static async createVote(t){const s=await e.pg.connect();await s.query(\"INSERT INTO votes(nickname, voice, thread) VALUES($1,$2,$3)\",[t.nickname,t.voice,t.thread]),s.release()}static async modifyVote(t){const s=await e.pg.connect();await s.query(\"UPDATE votes SET nickname=$1, voice=$2, thread=$3 WHERE LOWER(votes.thread) = LOWER($3)\",[t.nickname,t.voice,t.thread]),s.release()}}class m{static async getUserStatus(){const t=await e.pg.connect(),{rows:s}=await t.query(\"SELECT COUNT(*) AS user FROM users\");return t.release(),s[0].user=Number(s[0].user),s[0]}static async getForumStatus(){const t=await e.pg.connect(),{rows:s}=await t.query(\"SELECT COUNT(*) AS forum FROM forums\");return t.release(),s[0].forum=Number(s[0].forum),s[0]}static async getThreadStatus(){const t=await e.pg.connect(),{rows:s}=await t.query(\"SELECT COUNT(*) AS thread FROM threads\");return t.release(),s[0].thread=Number(s[0].thread),s[0]}static async getPostStatus(){const t=await e.pg.connect(),{rows:s}=await t.query(\"SELECT COUNT(*) AS post FROM posts\");return t.release(),s[0].post=Number(s[0].post),s[0]}}class p{static async getMatchFromUsersForum(t){const s=await e.pg.connect(),{rows:r}=await s.query(\"SELECT nickname, forum FROM forum_users WHERE LOWER(nickname)=LOWER($1) AND LOWER(forum)=LOWER($2)\",[t.nickname,t.forum]);return s.release(),r}static async addUserToUsersForum(t){const s=await e.pg.connect();await s.query(\"INSERT INTO forum_users(nickname, forum) VALUES($1,$2)\",[t.nickname,t.forum]),s.release()}static async getUsersFromForum(t){const s=await e.pg.connect();if(t.desc&&t.since){const{rows:e}=await s.query('SELECT users.about, users.email, users.fullname, users.nickname FROM forum_users JOIN users ON LOWER(forum_users.nickname)=LOWER(users.nickname) WHERE LOWER(forum_users.forum)=LOWER($1) AND LOWER(users.nickname COLLATE \"C\") < LOWER($3 COLLATE \"C\") ORDER BY LOWER(users.nickname) COLLATE \"C\" DESC LIMIT $2',[t.forum,t.limit,t.since]);return s.release(),e}if(!t.desc&&t.since){const{rows:e}=await s.query('SELECT users.about, users.email, users.fullname, users.nickname FROM forum_users JOIN users ON LOWER(forum_users.nickname)=LOWER(users.nickname) WHERE LOWER(forum_users.forum)=LOWER($1) AND LOWER(users.nickname COLLATE \"C\") > LOWER($3 COLLATE \"C\") ORDER BY LOWER(users.nickname) COLLATE \"C\" ASC LIMIT $2',[t.forum,t.limit,t.since]);return s.release(),e}if(t.desc&&!t.since){const{rows:e}=await s.query('SELECT users.about, users.email, users.fullname, users.nickname FROM forum_users JOIN users ON LOWER(forum_users.nickname)=LOWER(users.nickname) WHERE LOWER(forum_users.forum)=LOWER($1) ORDER BY LOWER(users.nickname) COLLATE \"C\" DESC LIMIT $2',[t.forum,t.limit]);return s.release(),e}const{rows:r}=await s.query('SELECT users.about, users.email, users.fullname, users.nickname FROM forum_users JOIN users ON LOWER(forum_users.nickname)=LOWER(users.nickname) WHERE LOWER(forum_users.forum)=LOWER($1) ORDER BY LOWER(users.nickname) COLLATE \"C\" ASC LIMIT $2',[t.forum,t.limit]);return s.release(),r}}(async()=>{try{await e.listen(5e3),e.log.info(`server listening on ${e.server.address().port}`)}catch(s){e.log.error(s),t.exit(1)}})()}).call(this,s(2))},function(t,e){var s,r,a=t.exports={};function n(){throw new Error(\"setTimeout has not been defined\")}function i(){throw new Error(\"clearTimeout has not been defined\")}function o(t){if(s===setTimeout)return setTimeout(t,0);if((s===n||!s)&&setTimeout)return s=setTimeout,setTimeout(t,0);try{return s(t,0)}catch(e){try{return s.call(null,t,0)}catch(e){return s.call(this,t,0)}}}!function(){try{s=\"function\"==typeof setTimeout?setTimeout:n}catch(t){s=n}try{r=\"function\"==typeof clearTimeout?clearTimeout:i}catch(t){r=i}}();var u,c=[],d=!1,l=-1;function m(){d&&u&&(d=!1,u.length?c=u.concat(c):l=-1,c.length&&p())}function p(){if(!d){var t=o(m);d=!0;for(var e=c.length;e;){for(u=c,c=[];++l<e;)u&&u[l].run();l=-1,e=c.length}u=null,d=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function h(t,e){this.fun=t,this.array=e}function E(){}a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)e[s-1]=arguments[s];c.push(new h(t,e)),1!==c.length||d||o(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},a.title=\"browser\",a.browser=!0,a.env={},a.argv=[],a.version=\"\",a.versions={},a.on=E,a.addListener=E,a.once=E,a.off=E,a.removeListener=E,a.removeAllListeners=E,a.emit=E,a.prependListener=E,a.prependOnceListener=E,a.listeners=function(t){return[]},a.binding=function(t){throw new Error(\"process.binding is not supported\")},a.cwd=function(){return\"/\"},a.chdir=function(t){throw new Error(\"process.chdir is not supported\")},a.umask=function(){return 0}},function(t,e){t.exports=require(\"fastify\")},function(t,e){t.exports=require(\"fastify-postgres\")}]);","extractedComments":[]}